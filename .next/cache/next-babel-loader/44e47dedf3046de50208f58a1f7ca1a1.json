{"ast":null,"code":"import { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport credentials from \"../../creditials.json\";\nimport moment from \"moment\";\nconst doc = new GoogleSpreadsheet(\"1q1_LXvhEEsjjWg1zVxzD3CM1WZ2R9LN_4DKLU2mln7E\");\n\nconst genCupom = () => {\n  const code = parseInt(moment().format(\"YYMMDDHHmmssSSS\")).toString(16).toUpperCase();\n  return code.substr(0, 4) + \"-\" + code.substr(4, 4) + \"-\" + code.substr(8, 4);\n};\n\nexport default (async (request, response) => {\n  try {\n    await doc.useServiceAccountAuth(credentials);\n    await doc.loadInfo();\n    const sheet = doc.sheetsByIndex[1];\n    const data = JSON.parse(request.body);\n    const sheetConfig = doc.sheetsByIndex[2];\n    await sheetConfig.loadCells(\"A2:B2\");\n    const mostraPromocaoCell = sheetConfig.getCell(1, 0);\n    const textoCell = sheetConfig.getCell(1, 1);\n    let Cupom = \"\";\n    let Promo = \"\";\n\n    if (mostraPromocaoCell.value === \"VERDADEIRO\") {\n      // todo: GERAR CUPOM\n      Cupom = genCupom();\n      Promo = textoCell.value;\n    } // Nome\tEmail\tWhatsapp\tCupom\tPromo\n\n\n    await sheet.addRow({\n      Nome: data.Nome,\n      Email: data.Email,\n      Whatsapp: data.Whatsapp,\n      Nota: 5,\n      \"Data Preenchimento\": moment().format(\"DD/MM/YYYY, HH:mm:ss\"),\n      Cupom,\n      Promo\n    });\n    response.end(JSON.stringify({\n      showCoupon: Cupom !== \"\",\n      Cupom,\n      Promo\n    }));\n  } catch (err) {\n    response.end(\"Error\");\n  }\n});","map":{"version":3,"sources":["C:/Users/samue/OneDrive/Documentos/Projects/palpite-box/pages/api/save.js"],"names":["GoogleSpreadsheet","credentials","moment","doc","genCupom","code","parseInt","format","toString","toUpperCase","substr","request","response","useServiceAccountAuth","loadInfo","sheet","sheetsByIndex","data","JSON","parse","body","sheetConfig","loadCells","mostraPromocaoCell","getCell","textoCell","Cupom","Promo","value","addRow","Nome","Email","Whatsapp","Nota","end","stringify","showCoupon","err"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,oBAAlC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,GAAG,GAAG,IAAIH,iBAAJ,CACV,8CADU,CAAZ;;AAIA,MAAMI,QAAQ,GAAG,MAAM;AACrB,QAAMC,IAAI,GAAGC,QAAQ,CAACJ,MAAM,GAAGK,MAAT,CAAgB,iBAAhB,CAAD,CAAR,CACVC,QADU,CACD,EADC,EAEVC,WAFU,EAAb;AAGA,SAAOJ,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAe,CAAf,IAAoB,GAApB,GAA0BL,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAe,CAAf,CAA1B,GAA8C,GAA9C,GAAoDL,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAe,CAAf,CAA3D;AACD,CALD;;AAOA,gBAAe,OAAOC,OAAP,EAAgBC,QAAhB,KAA6B;AAC1C,MAAI;AACF,UAAMT,GAAG,CAACU,qBAAJ,CAA0BZ,WAA1B,CAAN;AACA,UAAME,GAAG,CAACW,QAAJ,EAAN;AACA,UAAMC,KAAK,GAAGZ,GAAG,CAACa,aAAJ,CAAkB,CAAlB,CAAd;AACA,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWR,OAAO,CAACS,IAAnB,CAAb;AAEA,UAAMC,WAAW,GAAGlB,GAAG,CAACa,aAAJ,CAAkB,CAAlB,CAApB;AACA,UAAMK,WAAW,CAACC,SAAZ,CAAsB,OAAtB,CAAN;AAEA,UAAMC,kBAAkB,GAAGF,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuB,CAAvB,CAA3B;AACA,UAAMC,SAAS,GAAGJ,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuB,CAAvB,CAAlB;AAEA,QAAIE,KAAK,GAAG,EAAZ;AACA,QAAIC,KAAK,GAAG,EAAZ;;AAEA,QAAIJ,kBAAkB,CAACK,KAAnB,KAA6B,YAAjC,EAA+C;AAC7C;AACAF,MAAAA,KAAK,GAAGtB,QAAQ,EAAhB;AACAuB,MAAAA,KAAK,GAAGF,SAAS,CAACG,KAAlB;AACD,KAnBC,CAoBF;;;AACA,UAAMb,KAAK,CAACc,MAAN,CAAa;AACjBC,MAAAA,IAAI,EAAEb,IAAI,CAACa,IADM;AAEjBC,MAAAA,KAAK,EAAEd,IAAI,CAACc,KAFK;AAGjBC,MAAAA,QAAQ,EAAEf,IAAI,CAACe,QAHE;AAIjBC,MAAAA,IAAI,EAAE,CAJW;AAKjB,4BAAsB/B,MAAM,GAAGK,MAAT,CAAgB,sBAAhB,CALL;AAMjBmB,MAAAA,KANiB;AAOjBC,MAAAA;AAPiB,KAAb,CAAN;AASAf,IAAAA,QAAQ,CAACsB,GAAT,CACEhB,IAAI,CAACiB,SAAL,CAAe;AACbC,MAAAA,UAAU,EAAEV,KAAK,KAAK,EADT;AAEbA,MAAAA,KAFa;AAGbC,MAAAA;AAHa,KAAf,CADF;AAOD,GArCD,CAqCE,OAAOU,GAAP,EAAY;AACZzB,IAAAA,QAAQ,CAACsB,GAAT,CAAa,OAAb;AACD;AACF,CAzCD","sourcesContent":["import { GoogleSpreadsheet } from \"google-spreadsheet\";\r\nimport credentials from \"../../creditials.json\";\r\nimport moment from \"moment\";\r\n\r\nconst doc = new GoogleSpreadsheet(\r\n  \"1q1_LXvhEEsjjWg1zVxzD3CM1WZ2R9LN_4DKLU2mln7E\"\r\n);\r\n\r\nconst genCupom = () => {\r\n  const code = parseInt(moment().format(\"YYMMDDHHmmssSSS\"))\r\n    .toString(16)\r\n    .toUpperCase();\r\n  return code.substr(0, 4) + \"-\" + code.substr(4, 4) + \"-\" + code.substr(8, 4);\r\n};\r\n\r\nexport default async (request, response) => {\r\n  try {\r\n    await doc.useServiceAccountAuth(credentials);\r\n    await doc.loadInfo();\r\n    const sheet = doc.sheetsByIndex[1];\r\n    const data = JSON.parse(request.body);\r\n\r\n    const sheetConfig = doc.sheetsByIndex[2];\r\n    await sheetConfig.loadCells(\"A2:B2\");\r\n\r\n    const mostraPromocaoCell = sheetConfig.getCell(1, 0);\r\n    const textoCell = sheetConfig.getCell(1, 1);\r\n\r\n    let Cupom = \"\";\r\n    let Promo = \"\";\r\n\r\n    if (mostraPromocaoCell.value === \"VERDADEIRO\") {\r\n      // todo: GERAR CUPOM\r\n      Cupom = genCupom();\r\n      Promo = textoCell.value;\r\n    }\r\n    // Nome\tEmail\tWhatsapp\tCupom\tPromo\r\n    await sheet.addRow({\r\n      Nome: data.Nome,\r\n      Email: data.Email,\r\n      Whatsapp: data.Whatsapp,\r\n      Nota: 5,\r\n      \"Data Preenchimento\": moment().format(\"DD/MM/YYYY, HH:mm:ss\"),\r\n      Cupom,\r\n      Promo,\r\n    });\r\n    response.end(\r\n      JSON.stringify({\r\n        showCoupon: Cupom !== \"\",\r\n        Cupom,\r\n        Promo,\r\n      })\r\n    );\r\n  } catch (err) {\r\n    response.end(\"Error\");\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}